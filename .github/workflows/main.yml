name: Cypress Tests
on: [push]
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  setup:
    name: Install & pre-test
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node14.17.6-chrome100-ff98
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: cypress-io/github-action@v3
        with:
          runTests: false
      - name: Cypress clean
        run: npm run clean:reports
      - name: Create reports directory
        run: mkdir reports 

  execution:
    name: Cypress Execution
    runs-on:  ubuntu-latest
    container:
      image: cypress/browsers:node14.17.6-chrome100-ff98
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v3
        with:
          command: npx cypress run --spec 'cypress/e2e/${{ matrix.containers }}/*.cy.js'
          browser: chrome
        continue-on-error: true
      - name: Upload mochawesome report
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-${{ matrix.containers }}
          path: mochawesome-report
      - uses: actions/upload-artifact@v3
        with:
          name: TestReport
          path: TestReport   

  reporting:
    name: Cypress Mochawesome and Slack Reporting
    needs: [setup,execution]
    if: always()
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node14.17.6-chrome100-ff98
    steps:
      - name: Download screenshot
        uses: actions/download-artifact@v3
        with:
          name: TestReport
          path: TestReport
      - name: Download test-reports
        uses: actions/download-artifact@v3
        with:
          path: reports/
      - name: Move all reports into one directory
        run: |
          mkdir -p mochawesome-report
          i=0
          for file in $(find reports -type f -name mochawesome\*.json); do
            filename=$(basename "$file" .json)-"$i".json
            mv "$file" mochawesome-report/"$filename"
            ls mochawesome-report
            i=$((i + 1))
          done
      - name: Merge and generate reports
        run: |
          mkdir GeneratedReport
          cp -r TestReport/**/*.png GeneratedReport
          npx mochawesome-merge > GeneratedReport/cypress-tests-report.json
          npx mochawesome-report-generator --reportDir GeneratedReport GeneratedReport/cypress-tests-report.json
      - name: Slack report
        run: npx cypress-slack-reporter --screenshot-dir GeneratedReport --report-dir GeneratedReport --ci-provider custom --custom-url='~/GeneratedReport/cypress-tests-report.html'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - uses: actions/upload-artifact@v3
        with:
          name: GeneratedReport
          path: GeneratedReport
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: reporting
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
#       - name: Install rsync ðŸ“š
#         run: |
#           apt-get update && apt-get install -y rsync
#       - name: Deploy ðŸš€
#         uses: JamesIves/github-pages-deploy-action@v4
#         with:
#           folder: GeneratedReport # The folder the action should deploy.
#       - name: Copy test execution videos
#         run: |
#           mkdir public
#           cp -r GeneratedReport public/GeneratedReport
#       - name: Deploy to GitHub Pages ðŸš€
#         uses: peaceiris/actions-gh-pages@v3.7.3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_branch: gh-pages
#           publish_dir: ./public




